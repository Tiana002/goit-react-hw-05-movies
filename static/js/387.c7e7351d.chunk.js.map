{"version":3,"file":"static/js/387.c7e7351d.chunk.js","mappings":"iTAEMA,EAAM,mCAECC,EAAiB,mCAAG,4FACd,mDADc,SAERC,EAAAA,EAAAA,IAAA,UADN,mDACM,oBAAiCF,IAFzB,uBAEvBG,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,+EACZ,4CADY,SAENH,EAAAA,EAAAA,IAAA,UADN,4CACM,oBACEF,EADF,kBACeK,EADf,YAFM,uBAErBF,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAe,mCAAG,WAAMC,GAAN,+EACZ,sCADY,SAENL,EAAAA,EAAAA,IAAA,UADN,sCACM,YAAyBK,EAAzB,oBAAuCP,IAFjC,uBAErBG,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfK,EAAe,mCAAG,WAAMD,GAAN,+EACZ,sCADY,SAENL,EAAAA,EAAAA,IAAA,UADN,sCACM,YAAyBK,EAAzB,4BAA+CP,IAFzC,uBAErBG,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfM,EAAgB,mCAAG,WAAMF,GAAN,+EACb,sCADa,SAEPL,EAAAA,EAAAA,IAAA,UADN,sCACM,YACNK,EADM,4BACgBP,EADhB,YAFO,uBAEtBG,EAFsB,EAEtBA,KAFsB,kBAKvBA,GALuB,2CAAH,qD,qJC3BhBO,EAAQC,EAAAA,GAAAA,EAAH,uEAKLC,EAAcD,EAAAA,GAAAA,GAAH,iDAGXE,EAAcF,EAAAA,GAAAA,GAAH,6CAGXG,EAAaH,EAAAA,GAAAA,EAAH,kEAKVI,EAAcJ,EAAAA,GAAAA,EAAH,6C,SC2BxB,EAjCgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEZ,EAAAA,EAAAA,IAAiBO,GAASM,MAAK,SAAAC,GAAG,OAAIH,EAAeG,EAAIC,QAAvB,GAGnC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACT,KAGF,+BACGY,EAAAA,EAAAA,SAAQT,IACP,SAACT,EAAD,UAAO,8CAEP,SAACE,EAAD,UACGO,EAAYU,KAAI,SAAAC,GACf,OACE,UAACjB,EAAD,YACE,SAACC,EAAD,UAAagB,EAAOC,UACpB,SAAChB,EAAD,UAAce,EAAOE,YAFLF,EAAOvB,GAK5B,OAKV,C","sources":["API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '33b1970aafc3d74cd7bfcca057d00843';\n\nexport const getTrendingMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n  const { data } = await axios.get(`${BASE_URL}?api_key=${KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const { data } = await axios.get(\n    `${BASE_URL}?api_key=${KEY}&query=${query}&page=1`\n  );\n  return data;\n};\n\nexport const getDetailsMovie = async id => {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const { data } = await axios.get(`${BASE_URL}/${id}?api_key=${KEY}`);\n  return data;\n};\n\nexport const getCreditsMovie = async id => {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const { data } = await axios.get(`${BASE_URL}/${id}/credits?api_key=${KEY}`);\n  return data;\n};\n\nexport const getReviewsMovies = async id => {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const { data } = await axios.get(\n    `${BASE_URL}/${id}/reviews?api_key=${KEY}&page=1`\n  );\n  return data;\n};\n","import styled from 'styled-components';\n\n\nexport const TextP = styled.p`\n  font-weight: 700;\n  margin: 20px 0 30px 0;\n`;\n\nexport const ListReviews = styled.ul`\n  padding-bottom: 50px;\n`;\nexport const ItemReviews = styled.li`\n  margin-top: 50px;\n`;\nexport const TextAuthor = styled.p`\n  margin-top: 10px;\n  font-weight: 700;\n`;\n\nexport const TextContent = styled.p`\n  margin-top: 10px;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { getReviewsMovies } from 'API';\nimport {\n  ItemReviews,\n  ListReviews,\n  TextP,\n  TextAuthor,\n  TextContent,\n} from './Reviews.styled';\n\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [filmReviews, setFilmReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      getReviewsMovies(movieId).then(res => setFilmReviews(res.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isEmpty(filmReviews) ? (\n        <TextP>We don't have any reviews for this movie</TextP>\n      ) : (\n        <ListReviews>\n          {filmReviews.map(review => {\n            return (\n              <ItemReviews key={review.id}>\n                <TextAuthor>{review.author}</TextAuthor>\n                <TextContent>{review.content}</TextContent>\n              </ItemReviews>\n            );\n          })}\n        </ListReviews>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getTrendingMovies","axios","data","getSearchMovies","query","getDetailsMovie","id","getCreditsMovie","getReviewsMovies","TextP","styled","ListReviews","ItemReviews","TextAuthor","TextContent","movieId","useParams","useState","filmReviews","setFilmReviews","useEffect","then","res","results","error","console","log","isEmpty","map","review","author","content"],"sourceRoot":""}