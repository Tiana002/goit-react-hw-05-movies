{"version":3,"file":"static/js/255.43854426.chunk.js","mappings":"mQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mPAeVE,EAAUF,EAAAA,GAAAA,IAAH,qEAKPG,EAAYH,EAAAA,GAAAA,IAAH,4FAMTI,EAAYJ,EAAAA,GAAAA,IAAH,mHAOTK,EAAWL,EAAAA,GAAAA,GAAH,kFAKRM,EAAmBN,EAAAA,GAAAA,GAAH,gFAKhBO,EAAWP,EAAAA,GAAAA,GAAH,sBACRQ,EAAaR,EAAAA,GAAAA,IAAH,iEAIVS,GAAYT,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6IAQTU,EAAcV,EAAAA,GAAAA,EAAH,qEAKXW,EAAeX,EAAAA,GAAAA,GAAH,mGAMZY,EAAcZ,EAAAA,GAAAA,IAAH,sBACXa,EAAWb,EAAAA,GAAAA,KAAH,iE,0DC0BrB,EA1EqB,WAAO,IAAD,EACjBc,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,MAE9CC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBZ,GAASa,MAAK,SAAAC,GAAG,OAAIV,EAAYU,EAAhB,GAGlC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACf,IAEJ,IAAIkB,EAAS,GAMb,OAFOA,EAHFf,EAASgB,YAGD,0CAAsChB,EAASgB,aADxD,iKAIF,UAAC,IAAD,YACE,UAAClC,EAAD,CAAYmC,GAAIb,EAAOc,QAAvB,WACE,SAAC,MAAD,CAAaC,KAAK,OAAO,kBAIzBC,EAAAA,EAAAA,SAAQpB,KACR,UAACf,EAAD,YACE,UAACC,EAAD,YACE,SAACK,EAAD,CAAY8B,IAAKN,EAAQO,IAAI,SAASC,MAAM,WAC5C,UAACpC,EAAD,YACE,UAACO,EAAD,WACGM,EAASwB,MAETxB,EAASyB,eACR,UAAC7B,EAAD,WAAU,IAAEI,EAASyB,aAAaC,MAAM,EAAG,GAAG,WAIlD,UAACjC,EAAD,WAAa,eACEkC,KAAKC,MAA8B,GAAxB5B,EAAS6B,cAAqB,QAExD,SAACpC,EAAD,UAAa,cACb,SAACA,EAAD,UAAcO,EAAS8B,YACvB,SAACrC,EAAD,UAAa,YACb,SAACA,EAAD,UACGO,EAAS+B,OAAOC,OAAS,EACtBhC,EAAS+B,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAC9C,uCAIV,UAACzC,EAAD,YACE,SAACN,EAAD,UAAkB,4BAClB,UAACD,EAAD,YACE,SAACE,EAAD,WACE,SAACE,EAAD,CAAWyB,GAAG,OAAd,SAAqB,YAEvB,SAAC3B,EAAD,WACE,SAACE,EAAD,CAAWyB,GAAG,UAAd,SAAwB,kBAG5B,SAAC,EAAAoB,SAAD,WACE,SAAC,KAAD,cAOb,C","sources":["components/pages/MovieDetails.styled.jsx","components/pages/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 10px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieInfo = styled.div`\n  @media screen and (min-width: 1280px) {\n    display: flex;\n  }\n`;\n\nexport const MovieText = styled.div`\n  margin: 20px 0;\n  @media screen and (min-width: 1280px) {\n    margin-left: 30px;\n  }\n`;\n\nexport const MenuList = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 20px 0 20px 0;\n`;\nexport const TitleInformation = styled.h2`\n  margin: 20px 0 20px 0;\n  text-transform: uppercase;\n`;\n\nexport const MenuItem = styled.li``;\nexport const ImgDetails = styled.img`\n  border-radius: 15px;\n  width: 400px;\n`;\nexport const LinkItems = styled(Link)`\n  text-decoration: none;\n  font-weight: 700;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n`;\nexport const TextDetails = styled.p`\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const TitleDetails = styled.h1`\n  font-weight: 700;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\n\nexport const Information = styled.div``;\nexport const SpanYear = styled.span`\n  padding: 0px 10px;\n  color: #a01d1d;\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  StyledLink,\n  MovieInfo,\n  MovieText,\n  MenuList,\n  MenuItem,\n  ImgDetails,\n  TextDetails,\n  TitleDetails,\n  Information,\n  Content,\n  TitleInformation,\n  LinkItems,\n  SpanYear,\n} from './MovieDetails.styled';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { isEmpty } from 'lodash';\nimport { Container } from '../Container.styled';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getDetailsMovie } from 'API';\nimport { useRef } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmInfo, setFilmInfo] = useState({});\n\n  const location = useLocation();\n  const goBack = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    try {\n      getDetailsMovie(movieId).then(res => setFilmInfo(res));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  let source = '';\n  if (!filmInfo.poster_path) {\n    source =\n      'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg';\n  } else source = `https://image.tmdb.org/t/p/w500/${filmInfo.poster_path}`;\n\n  return (\n    <Container>\n      <StyledLink to={goBack.current}>\n        <HiArrowLeft size=\"15\" />\n        Go to Back\n      </StyledLink>\n\n      {!isEmpty(filmInfo) && (\n        <Content>\n          <MovieInfo>\n            <ImgDetails src={source} alt=\"poster\" width=\"300px\" />\n            <MovieText>\n              <TitleDetails>\n                {filmInfo.title}\n\n                {filmInfo.release_date && (\n                  <SpanYear>({filmInfo.release_date.slice(0, 4)})</SpanYear>\n                )}\n              </TitleDetails>\n\n              <TextDetails>\n                User score: {Math.round(filmInfo.vote_average * 10) + '%'}\n              </TextDetails>\n              <TextDetails>Overview</TextDetails>\n              <TextDetails>{filmInfo.overview}</TextDetails>\n              <TextDetails>Genres</TextDetails>\n              <TextDetails>\n                {filmInfo.genres.length > 0\n                  ? filmInfo.genres.map(genre => genre.name).join(', ')\n                  : 'No information about genres'}\n              </TextDetails>\n            </MovieText>\n          </MovieInfo>\n          <Information>\n            <TitleInformation>Additional information</TitleInformation>\n            <MenuList>\n              <MenuItem>\n                <LinkItems to=\"cast\">Cast</LinkItems>\n              </MenuItem>\n              <MenuItem>\n                <LinkItems to=\"reviews\">Reviews</LinkItems>\n              </MenuItem>\n            </MenuList>\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Information>\n        </Content>\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","Content","MovieInfo","MovieText","MenuList","TitleInformation","MenuItem","ImgDetails","LinkItems","TextDetails","TitleDetails","Information","SpanYear","movieId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","goBack","useRef","state","from","useEffect","getDetailsMovie","then","res","error","console","log","source","poster_path","to","current","size","isEmpty","src","alt","width","title","release_date","slice","Math","round","vote_average","overview","genres","length","map","genre","name","join","Suspense"],"sourceRoot":""}